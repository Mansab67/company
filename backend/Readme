# Task Management API Documentation

## Overview
This API provides endpoints to create, read, update, and delete tasks. Authentication is required for all operations.

## Base URL

```
https://task-management-a8wd.onrender.com/
```

## Authentication
All routes require a valid JWT token in the `Authorization` header.
```
Authorization: Bearer <token>
```

---
## Endpoints

### 1. Create a New Task
**Endpoint:**
```
POST /tasks
```
**Request Headers:**
```
Authorization: Bearer <token>
```
**Request Body:** (JSON)
```json
{
  "title": "Task Title",
  "description": "Task Description",
  "status": "pending"
}
```
**Response:**
- `201 Created` - Task successfully created.
- `400 Bad Request` - Invalid request data.

---
### 2. Get All Tasks
**Endpoint:**
```
GET /tasks
```
**Request Headers:**
```
Authorization: Bearer <token>
```
**Response:**
- `200 OK` - Returns an array of tasks.
- `400 Bad Request` - Error retrieving tasks.

---
### 3. Get a Task by ID
**Endpoint:**
```
GET /tasks/:id
```
**Request Headers:**
```
Authorization: Bearer <token>
```
**Response:**
- `200 OK` - Returns the requested task.
- `404 Not Found` - Task not found.
- `400 Bad Request` - Invalid request.

---
### 4. Update an Existing Task
**Endpoint:**
```
PUT /tasks/:id
```
**Request Headers:**
```
Authorization: Bearer <token>
```
**Request Body:** (JSON, optional fields)
```json
{
  "title": "Updated Title",
  "description": "Updated Description",
  "status": "completed"
}
```
**Response:**
- `200 OK` - Returns updated task.
- `404 Not Found` - Task not found.
- `400 Bad Request` - Invalid request.

---
### 5. Delete a Task
**Endpoint:**
```
DELETE /tasks/:id
```
**Request Headers:**
```
Authorization: Bearer <token>
```
**Response:**
- `200 OK` - Task successfully deleted.
- `404 Not Found` - Task not found.
- `400 Bad Request` - Error deleting task.

---
## Error Handling
- **400 Bad Request** - Invalid input or request.
- **401 Unauthorized** - Missing or invalid authentication token.
- **404 Not Found** - Requested resource does not exist.

## Notes
- Ensure `authenticateToken` middleware is properly handling authentication.
- Database interactions are handled using Mongoose.
- Modify or extend schema as needed for additional fields.


